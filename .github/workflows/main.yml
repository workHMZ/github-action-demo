name: Build and Push Docker Image to Docker Hub

# 控制 workflow 的触发条件
on:
  push: # 当有代码推送到指定分支时触发
    branches: [ "main" ] # 您可以修改为您仓库的主分支名，例如 "master"
  workflow_dispatch: # 允许手动触发

jobs: # 定义一个或多个作业
  build_and_push: # 作业的 ID
    runs-on: ubuntu-latest # 指定作业运行的环境 (这里是最新版的 Ubuntu)

    steps: # 作业中的步骤
      - name: Checkout repository # 第一步：检出代码
        uses: actions/checkout@v4 # 使用官方的 checkout action

      - name: Set up Docker Buildx # 第二步：设置 Docker Buildx，用于构建多平台镜像 (可选，但推荐)
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub # 第三步：登录到 Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # 使用之前配置的 Secret
          password: ${{ secrets.DOCKERHUB_TOKEN }} # 使用之前配置的 Secret

      - name: Build and push Docker image # 第四步：构建并推送 Docker 镜像
        uses: docker/build-push-action@v5
        with:
          context: . # Dockerfile 的路径 (当前目录)
          file: ./Dockerfile # Dockerfile 的文件名
          push: true # 设置为 true 以推送镜像
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-hello-world-app:latest # 镜像的标签，格式为: 你的DockerHub用户名/镜像名:标签
          # tags:  如果需要多个标签，可以使用逗号分隔
          #   ${{ secrets.DOCKERHUB_USERNAME }}/my-hello-world-app:latest
          #   ${{ secrets.DOCKERHUB_USERNAME }}/my-hello-world-app:${{ github.sha }}
